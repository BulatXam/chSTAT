from aiogram import Bot, Dispatcher
from aiogram import executor

from aiogram.types import Message

from aiogram.utils.exceptions import BadRequest

from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext

from forms import ChannelLinkForm

from keyboards import start_keyboard

import config
import crud

bot = Bot(token=config.TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)


@dp.message_handler(commands="Hi")
async def cmd_test1(message: Message):
    await message.reply("Hello World")


@dp.message_handler(commands=["start", "help"])
async def start(message: Message):
    await bot.send_message(
        chat_id=message.chat.id,
        text='üëã –ü—Ä–∏–≤–µ—Ç, —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å '
             '—Å–≤–æ–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏. –î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, '
             '–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–º–æ—â—å"',
        reply_markup=start_keyboard
    )


@dp.message_handler(text=["–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª"])
async def add_channel(message: Message):
    await ChannelLinkForm.link.set()

    await bot.send_message(
        chat_id=message.chat.id,
        text="–î–æ–±–∞–≤—å—Ç–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ –≤–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∞."
             "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–∏–ª–∏-–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ–º."
    )


@dp.message_handler(state=ChannelLinkForm.link)
async def process_channel_link(message: Message,
                               state: FSMContext):

    channel = await bot.get_chat(chat_id=message.text)

    try:
        admins = await channel.get_administrators()
    except BadRequest:
        # –ó–∞–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ–∏–∑–æ—à–µ–ª, —Ç–∞–∫ –∫–∞–∫ –±–æ—Ç –Ω–µ –≤—Å—Ç—É–ø–ª–µ–Ω –≤
        # –∫–∞–Ω–∞–ª –∏–ª–∏ –µ–º—É –Ω–µ –¥–∞–ª–∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
        await bot.send_message(
            message.chat.id,
            text="–í—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª!"
        )
        return

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è —á–∞—Ç–∞ –∏–∑ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤
        channel_owner = \
            [admin for admin in admins if admin.is_chat_creator()][0]
    except IndexError:
        # –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–Ω–¥–µ–∫—Å–∞[0], —Ç–∞–∫ –∫–∞–∫ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç.
        await bot.send_message(
            message.chat.id,
            text="–í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è!"
        )
        return

    if channel_owner["user"]["id"] == message.from_user.id:
        author = await crud.getOrCreateAuthor(
            id=message.from_user.id,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            username=message.from_user.username,
        )

        db_channel = await crud.createChannel(
            id=channel.id,
            author_id=message.from_user.id,
            title=channel.title,
            username=channel.username,
            description=channel.description,
            invite_link=channel.invite_link,
            linked_chat_id=channel.linked_chat_id
        )
        if db_channel:
            author.channels.append(db_channel)

        await bot.send_message(chat_id=message.chat.id,
                               text=f"–ö–∞–Ω–∞–ª {channel.title} –¥–æ–±–∞–≤–ª–µ–Ω!")
    else:
        await bot.send_message(chat_id=message.chat.id,
                               text="–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞!")

    # –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤ state –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–ø–∏—Å–µ–π, —Ç–∞–∫ –∫–∞–∫ –º—ã –ø–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ 1 –∑–∞–ø–∏—Å—å.
    await state.finish()


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
